// <auto-generated />
using System;
using AndreAirLinesAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AndreAirLinesAPI.Migrations
{
    [DbContext(typeof(AndreAirLinesAPIContext))]
    [Migration("20220401134957_v4")]
    partial class v4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AndreAirLinesAPI.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Federative_Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("AndreAirLinesAPI.Model.Aircraft", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Aircraft_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Aircraft");
                });

            modelBuilder.Entity("AndreAirLinesAPI.Model.Airport", b =>
                {
                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Airport_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Acronym");

                    b.HasIndex("AddressId");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("AndreAirLinesAPI.Model.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AircraftId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationAcronym")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OriginAcronym")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PassengerCpf")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("DestinationAcronym");

                    b.HasIndex("OriginAcronym");

                    b.HasIndex("PassengerCpf");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("AndreAirLinesAPI.Model.Model.Passenger", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passenger_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cpf");

                    b.HasIndex("AddressId");

                    b.ToTable("Passenger");
                });

            modelBuilder.Entity("AndreAirLinesAPI.Model.Airport", b =>
                {
                    b.HasOne("AndreAirLinesAPI.Model.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("AndreAirLinesAPI.Model.Flight", b =>
                {
                    b.HasOne("AndreAirLinesAPI.Model.Aircraft", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId");

                    b.HasOne("AndreAirLinesAPI.Model.Airport", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationAcronym");

                    b.HasOne("AndreAirLinesAPI.Model.Airport", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginAcronym");

                    b.HasOne("AndreAirLinesAPI.Model.Model.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("PassengerCpf");

                    b.Navigation("Aircraft");

                    b.Navigation("Destination");

                    b.Navigation("Origin");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("AndreAirLinesAPI.Model.Model.Passenger", b =>
                {
                    b.HasOne("AndreAirLinesAPI.Model.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
